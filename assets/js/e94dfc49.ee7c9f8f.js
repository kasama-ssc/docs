"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[289],{3957:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var t=n(4848),i=n(8453);const r={sidebar_position:1,slug:"/"},o="System Overview",l={id:"overview/overview",title:"System Overview",description:"The voting system is a web-based platform designed to facilitate secure and user-friendly elections for Saint Louis University. It supports multiple roles such as voters, election administrators, and technical staff, each with different access levels and functionalities.",source:"@site/docs/overview/overview.md",sourceDirName:"overview",slug:"/",permalink:"/docs/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/"},sidebar:"defaultSidebar",next:{title:"Prerequisites",permalink:"/docs/setup/prerequisites"}},a={},c=[{value:"Key Features",id:"key-features",level:2},{value:"System Architecture",id:"system-architecture",level:2},{value:"Database",id:"database",level:3},{value:"Roles and Permissions",id:"roles-and-permissions",level:3},{value:"Voting Process Flow",id:"voting-process-flow",level:2},{value:"Technologies Used",id:"technologies-used",level:2}];function d(e){const s={h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"system-overview",children:"System Overview"}),"\n",(0,t.jsx)(s.p,{children:"The voting system is a web-based platform designed to facilitate secure and user-friendly elections for Saint Louis University. It supports multiple roles such as voters, election administrators, and technical staff, each with different access levels and functionalities."}),"\n",(0,t.jsx)(s.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Secure Voting"}),": Ensures each voter can only vote once with their unique credentials."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Real-Time Results"}),": Provides election results as soon as voting ends."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Admin Dashboard"}),": Allows election administrators to monitor voter turnout, system status, and manage roles."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Multiple Roles"}),": Different roles (IT Committee, Central COMELEC, COMELEC Members) with appropriate access levels."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Customizable"}),": Front-end (UI) and back-end features are designed to be easily customizable for different election needs."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"system-architecture",children:"System Architecture"}),"\n",(0,t.jsxs)(s.p,{children:["The system follows an ",(0,t.jsx)(s.strong,{children:"MVCS (Model-View-Controller-Service)"})," architecture, which enhances the standard MVC pattern by introducing Services to handle business logic separately from the Controllers. This ensures clean separation of concerns and improves code reusability:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Model"}),": Handles the data logic and communication with the database (e.g., user accounts, voter logs, election results)."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"View"}),": Manages the user interface (e.g., ballot form, admin dashboard)."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Controller"}),": Processes user input, interacts with the Model, and updates the View accordingly."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Service"}),": Contains reusable business logic, including validation, calculations, and workflows, making the Controllers leaner and focused on handling requests."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"database",children:"Database"}),"\n",(0,t.jsx)(s.p,{children:"The database stores key information such as:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Voters and Accounts"}),": User data for authentication and authorization."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Election Information"}),": Details about candidates, positions, and election settings."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Vote Records"}),": Logs of votes cast, ensuring transparency and accountability."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"roles-and-permissions",children:"Roles and Permissions"}),"\n",(0,t.jsx)(s.p,{children:"The system provides role-based access control to ensure different user types have the necessary permissions:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"IT Committee"}),": Responsible for system setup and monitoring."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Central COMELEC"}),": Oversees the entire election process."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"COMELEC Members"}),": Assist with voter management and precinct operations."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"voting-process-flow",children:"Voting Process Flow"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Login"}),": Voters authenticate using their credentials (Google or Username and Password)."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Vote"}),": Voters are presented with a ballot for the active election."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Submission"}),": Once votes are submitted, the system records the ballot and logs metadata (e.g., time, device)."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Results"}),": After the election closes, results are displayed to administrators."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"technologies-used",children:"Technologies Used"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Front-end"}),": HTML, CSS, JavaScript, jQuery"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Back-end"}),": PHP, MySQL"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Framework"}),": Built on the MVCS architecture to ensure separation of concerns and business logic reuse."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Deployment"}),": Typically hosted locally on WAMP or XAMPP, and on LAMP for the actual elections."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var t=n(6540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);